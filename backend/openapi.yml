openapi: 3.0.1
info:
  title: Animal Park API
  description: APIs for Animal Park, an e-commerce site.
  version: v1.0.0-2024.12.12
tags:
  - name: check
    description: check API
  - name: product
    description: APIs for managing products
paths:
  /check:
    get:
      tags:
        - check
      operationId: CheckAPI
      summary: Check API
      description: Status Check API for development.
      responses:
        '200':
          description: Check API response for DB connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
  /product:
    get:
      tags:
        - product
      operationId: getProductList
      summary: Get product list by category
      description: Returns a list of products filtered by category. 
      parameters:
        - $ref: '#/components/parameters/category_id'
      responses:
        '200':
          description: A list of products for the specified category.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListResponse'
        '400':
          description: '#/components/schemes/BadRequest'
        '401':
          description: '#/components/schemes/NotFound'
  /product/{product_id}:
    get:
      tags:
        - product
      operationId: getProductDetail
      summary: Get product details by product ID
      description: Returns detailed information for a specific product.
      parameters:
        - $ref: '#/components/parameters/product_id'
      responses:
        '200':
          description: Detailed information about the product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetailResponse'
        '400':
          description: '#/components/schemas/BadRequest'
        '401':
          description: '#/components/schemas/NotFound'
components:
  parameters:
    category_id:
      name: category_id
      in: query
      required: true
      description: The ID of the category to filter products.
      schema:
        type: integer
        example: 1
    product_id:
      name: product_id
      in: path
      required: true
      description: The ID of the product to fetch details for.
      schema:
        type: integer
        example: 101
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: integer
          example: 1
        user_name:
          type: string
          example: "田中　太郎"
        email:
          type: string
          example: "taro.tanaka@exapmle.com"
    CheckResponse:
      type: array
      items:
        $ref: '#/components/schemas/User'
    Product:
      type: object
      properties:
        product_id:
          type: integer
          example: 101
        product_name:
          type: string
          example: "Simple Gorilla"
        price:
          type: integer
          format: float
          example: 45000
        image_url:
          type: string
          example: "https://example.com/images/simple_gorilla.jpg"
        stock_quantity:
          type: integer
          example: 50
        availability:
          type: string
          example: "In Stock"
        rating:
          type: number
          format: float
          example: 4.5
        tags:
          type: array
          items:
            type: string
          example: ["New Arrival", "Best Seller"]
    ProductListResponse:
      type: object
      properties:
        category_id:
          type: integer
          example: 1
        category_name:
          type: string
          example: "Simple Animal"
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    ProductDetailResponse:
      type: object
      properties:
        product_id:
          type: integer
          example: 101
        product_name:
          type: string
          example: "Simple Gorilla"
        product_description:
          type: string
          example: "Simple Gorilla image"
        price:
          type: integer
          example: 45000
        image_url:
          type: string
          example: "https://example.com/images/simple_gorilla.jpg"
        stock_quantity:
          type: integer
          example: 50
        availability:
          type: string
          example: "In Stock"
        reviews:
          type: array
          items:
            type: object
            properties:
              user:
                type: string
                example: "Love Muscle"
              rating:
                type: number
                format: float
                example: 4.8
              comment:
                type: string
                example: "Excellent Muscle!!"
        related_products:
          type: array
          items:
            type: integer
            example: [101, 102]
        
  responses:
    BadRequest:
      description: Invalid category ID provided.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Invalid category ID"
    NotFound:
      description: Invalid category ID provided.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Category not found"
